from typing import Optional

from sqlalchemy import MetaData, Table, Column, Integer
from sqlalchemy.dialects import postgresql

from tests.schemas import USER_TABLE_NAME, USER_STATUS_ENUM_NAME
from tests.base.run_migration_test_abc import CompareAndRunTestCase


class TestExoticColumnNameRender(CompareAndRunTestCase):
    """https://github.com/Pogchamp-company/alembic-postgresql-enum/issues/95"""

    old_enum_variants = ["active", "passive"]
    new_enum_variants = old_enum_variants + ["banned"]

    def get_database_schema(self) -> MetaData:
        schema = MetaData()

        Table(
            USER_TABLE_NAME,
            schema,
            Column("id", Integer, primary_key=True),
            Column(
                "case",
                postgresql.ENUM(*self.old_enum_variants, name=USER_STATUS_ENUM_NAME),
            ),
        )

        return schema

    def get_target_schema(self) -> MetaData:
        schema = MetaData()

        Table(
            USER_TABLE_NAME,
            schema,
            Column("id", Integer, primary_key=True),
            Column(
                "case",
                postgresql.ENUM(*self.new_enum_variants, name=USER_STATUS_ENUM_NAME),
            ),
        )

        return schema

    def get_expected_upgrade(self) -> str:
        return f"""
            # ### commands auto generated by Alembic - please adjust! ###
            op.sync_enum_values(
                enum_schema='public',
                enum_name='user_status',
                new_values=['active', 'passive', 'banned'],
                affected_columns=[TableReference(table_schema='public', table_name='users', column_name='case')],
                enum_values_to_rename=[],
            )
            # ### end Alembic commands ###        
        """

    def get_expected_downgrade(self) -> Optional[str]:
        return f"""
            # ### commands auto generated by Alembic - please adjust! ###
            op.sync_enum_values(
                enum_schema='public',
                enum_name='user_status',
                new_values=['active', 'passive'],
                affected_columns=[TableReference(table_schema='public', table_name='users', column_name='case')],
                enum_values_to_rename=[],
            )
            # ### end Alembic commands ###        
        """
