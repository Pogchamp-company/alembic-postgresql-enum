from sqlalchemy import MetaData

from tests.base.run_migration_test_abc import CompareAndRunTestCase
from tests.schemas import get_schema_with_enum_variants


class TestEnumValuesReordering(CompareAndRunTestCase):
    """Check if enum is not updated when the variants are reordered"""

    old_enum_variants = ["active", "passive"]
    new_enum_variants = ["passive", "active"]

    def get_database_schema(self) -> MetaData:
        schema = get_schema_with_enum_variants(self.old_enum_variants)
        return schema

    def get_target_schema(self) -> MetaData:
        schema = get_schema_with_enum_variants(self.new_enum_variants)
        return schema

    def get_expected_upgrade(self) -> str:
        return """
        # ### commands auto generated by Alembic - please adjust! ###
        pass
        # ### end Alembic commands ###
        """

    def get_expected_downgrade(self) -> str:
        return """
        # ### commands auto generated by Alembic - please adjust! ###
        pass
        # ### end Alembic commands ###
        """
